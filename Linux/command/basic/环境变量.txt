**概念**：很多大型程序都有配置信息，环境变量就是Linux系统下的配置信息。

**分类**：
1 系统级（预定义）环境变量
2 用户级（自定义）环境变量

**系统级**（老九门）：
1 PATH：用于指定可执行文件的搜索路径。当您在终端中输入命令时，系统将在这些路径中查找可执行文件。（最核心的环境变量）
一般的PATH值如下：
/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
总的来说，sbin比bin级别稍高一些；
/下的命令是最基本的，往往仅在系统引导时才会用得到，包含了整个Linux中的最基本的命令；
/usr下的是系统中最常见的命令，尤其是/usr/bin这个目录，最常见的命令都在这里，apt install的程序也在这个目录；
/usr/local：你可以将自己的命令放在这里。
2 HOME：指定当前用户的主目录路径。
3 USER：表示当前登录用户的用户名。
4 SHELL：指定当前用户所使用的默认Shell程序。
5 LANG：设置默认的语言环境。
6 LD_LIBRARY_PATH：用于指定动态链接库（shared library）的搜索路径。
7 SHLVL：第几层
8 SSH_CLIENT：客户端的IP、端口、使用的sshd端口
9 SSH_TTY：该shell的tty

**用户级**：
1 如何设置一个环境变量？
（1）
export 变量名=变量值
注：这种设置方式仅对pts生效，不同pts不共享；
（2）
编辑用户的~/.bashrc文件
注：仅对用户生效，其他用户不共享；
（3）
编辑系统的/etc/profile文件
注：这是系统全局配置，对所有用户和所有pts生效；
另外，也可以这样：
export MY_ARRAY=("value1" "value2" "value3")
echo ${MY_ARRAY[0]}  # 输出value1
_要注意_：变量值的格式我们可以随意指定，比如像path那样用:分隔，或者用一个json格式，拿到变量后我们再对其作字符串处理。
2 如何取消一个环境变量？
unset 变量名



**一个无关紧要的命令**：
set根本不能设置环境变量，它设置的是shell变量，它的功能汇总如下：
1 set：显示当前的shell变量
2 设置选项和配置 shell 行为：
set -o OPTION：启用指定的选项。
set +o OPTION：禁用指定的选项。
3 一些常见的配置（注意取消使用+）
set -u：对未定义的变量进行严格检查，如果使用了未定义的变量则会产生错误。
set -e：在命令执行出错时立即退出脚本。
set -x：在执行命令之前，先显示该命令及其参数，用于调试脚本。
set -v：用户在执行命令后显示该命令。
set -p：显示当前的 shell 环境和函数。

**env**
显示所有环境变量

**echo $环境变量名**
获取环境变量的值，如果输出\n则说明没有该环境变量