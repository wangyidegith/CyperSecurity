字节流（基于TCP开发应用程序的核心问题）：TCP的具体实现如果不懂没有关系，只要知道他能提供这个服务就行了，但是字节流的概念如果不清楚，那么开发将不知所云。
	TCP将应用层数据视为字节流而非分组，这体现在收发缓冲区里：
		①当用户从一个TCP套接字中读数据时，TCP从字节层面保证了应用报文不出错，但是并不区分应用报文的边界，这导致了使用TCP开发的应用层必须解决粘包问题；
		②当用户向一个TCP套接字中写数据时，
		   这里首先涉及分段问题：分段问题是指局域网往往会规定一个最大传输单元MTU，比如以太网是1460B，但是用户发送的应用报文可能会大于这个数值，因而需要对数据包进行分段。
		   如何解决分段问题：当我们开发一个网络应用程序时，实际上我们可以在数据链路层及之上的任何一层解决分段问题，事实上，网络层和传输层也确实为分段问题提供了解决方案，但是让网络层去分段虽然技术上已经实现但是这不是一种节约资源的方法，网络层的计算资源相比端系统更有限，因而为了尽可能利用端系统的计算资源，我们应该尽可能使用传输层的分段机制或者在应用层由开发人员进行分段。
		   TCP分段：TCP在将应用报文送入网络层时分段，这个过程中TCP可不管应用报文的边界，只管从发送缓存中拿数据，而这也意味着应用层可以不用管应用报文的长度，分段的事情交给TCP即可。