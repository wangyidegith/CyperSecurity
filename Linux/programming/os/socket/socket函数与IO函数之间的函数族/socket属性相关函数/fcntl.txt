0 函数原型
#include <fcntl.h>
int fcntl(int fd, int cmd, ... /* arg */);

1 返回值：成0败-1设置错误码

2 参数
（0）
int fd：要操作的文件描述符（例如，套接字的文件描述符）。
（1）
int cmd：命令，指定要执行的操作。常用的命令包括：
F_GETFL：获取文件描述符的标志。
F_SETFL：设置文件描述符的标志。
F_GETFD：获取文件描述符的状态标志。
F_SETFD：设置文件描述符的状态标志。
F_DUPFD：复制文件描述符。
F_GETOWN：获取文件描述符的信号接收者。
F_SETOWN：设置文件描述符的信号接收者。
（2）
... arg：可选参数，取决于 cmd 的值：
F_GETFL：此时，arg 不需要使用，返回当前文件描述符的标志。
F_SETFL：arg 应该是要设置的新标志，通常是与当前标志按位或的组合，常见的有：O_NONBLOCK、O_ASYNC、O_APPEND。
F_GETFD：此时，arg 不需要使用，返回文件描述符的状态标志。
F_SETFD：arg 应该是要设置的新状态标志，可以是 FD_CLOEXEC 等，用于在执行 exec 系统调用时关闭描述符。
F_DUPFD：arg 应该是一个整数，表示新描述符必须大于或等于的值。系统会从这个值开始寻找未被使用的文件描述符。
F_GETOWN：此时，arg 不需要使用，返回文件描述符的信号接收者的进程 ID。
F_SETOWN：arg 应该是一个进程 ID，表示要设置的信号接收者。