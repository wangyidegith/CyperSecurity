零 网络地址的概念：所谓网络地址即一些具有唯一性的数字标识，用来标识网络接口，实际上对于一台计算机来讲，网络只有一个接口，那就是网卡与链路的接口，但是根据网络内部通信和网络外部通信的不同，该接口有不同层面的含义，在网络内部通信时，使用的是物理地址即MAC地址，这是一个六字节的数字，唯一标识世界上任何一张网卡，在与网络外部通信时，使用的是逻辑地址即IP地址，该地址唯一标识一个网络和一个网络接口，另外，在应用层面，还需要一个地址唯一标识进程，这就是端口号，端口号是一个十六位的数字，不是pid，接下来我们将重点介绍IP地址。







一 IP地址的概念：
1 唯一标识网络上的一台计算机的网络接口（网卡）：IP地址首先是用来唯一的标识网络中的某台计算机上的网络接口，如果该计算机只有一个网络接口，那么IP地址可唯一的标识这台计算机，对于路由器这种有多个网络接口的设备可以这样去理解：某个网络接口的IP不能唯一的表示这台路由器，也可以说任何一个网络接口的IP都可以唯一标识这台路由器。

2 唯一标识网络上的一个子网：IP地址和端口号、MAC地址不同，它是一种层次化的地址，所谓层次化指的是IP地址可分为网络部分和主机部分，网络部分可唯一标识一个子网络，主机部分可唯一标识该子网络中的某台计算机，这样二者加在一起唯一标识了网络上的某台计算机。
关于网络部分和主机部分的划分方式，经历了三个阶段：
（1）固定划分阶段：详见《计算机网络原理与实践》的150页图4-9；
（2）子网划分：在固定划分的基础上采用子网掩码的方式将主机好的一部分拿出来作为子网号；
（3）CIDR：实际上就是取消了固定划分的子网划分。








二 IP地址本质上是一个无符号32位的数，在POSIX标准下，它使用如下结构表示：
	struct in_addr {
		uint32_t s_addr; /* address in network byte order */
	}in_addr_t;
	该结构一般位于sockaddr_in结构中，这是一个在网络编程中的最常用的地址结构：
		struct sockaddr_in {
    			sa_family_t    sin_family; /* address family: AF_INET */
    			in_port_t      sin_port;   /* port in network byte order */
    			struct in_addr sin_addr;   /* internet address */
		};
	但是在bind、accept、connect函数中，往往使用sockaddr这个结构体接收用户或者网络传来的地址，这么做的目的是出于通用性的考虑：
		struct sockaddr {
    			sa_family_t sa_family;      /* address family, AF_xxx */
    			char        sa_data[14];    /* 14 bytes of protocol address */
		};







三 关于IP地址，有如下基本函数：
	in_addr_t       inet_lnaof(struct in_addr in);   // 获取IP地址的主机部分
	in_addr_t       inet_netof(struct in_addr in);   // 获取IP地址的网络部分
	struct in_addr       inet_makeaddr(int net, int host);   // 将网络地址和主机地址合称为IP地址
	