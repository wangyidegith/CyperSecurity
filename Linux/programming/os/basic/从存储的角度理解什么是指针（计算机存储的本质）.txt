先来思考一个问题：
大家在购买CPU时，也会经常关心缓存（cache）容量，例如 Intel Core i7 3770K 的三级缓存为 8MB，二级缓存为 256KB，一级缓存为32KB。
cache位于主存（main memory）与寄存器（register）之间，register离CPU最近，现代系统已经将其作为CPU的一部分，它的容量是整个存储
体系中最小的，只有4B，主存的大小一般为4GB，离CPU最远的硬盘作为系统的外部设备，大小随意，那么，问题来了：
为什么计算机的存储体系是离CPU越近的存储器容量越小呢？



这不是一个约定俗成的结果，而是因为计算机的工作原理是CPU的控制器去存储里面拿数据（通过寄存器拿），然后放进运算器里去计算，然后再把计算结果放给存储（通过寄存器放给内存）。

先补充一下存储的知识：存储器是由一个个存储单元构成的，一个存储单元的大小是1B，那么系统怎么找见这个1B的存储单元呢？——通过给这个存储单元一个4B的编号，这就是地址，也即
我们在C编程中心心念念的指针。

那么问题的重点来了，CPU具体怎么去拿数据放数据？——在介绍寄存器的时候，我们说一个寄存器==一个指针，
CPU通过寄存器即可知道程序的现在运行到了哪里以及该去哪里拿数据该把数据放到哪，那么你想想，如果这个寄存器很大，找是哪个指针是不是就得花不少时间，因而为了CPU的利用率，
离他最近的这个存储器就不能太大，现代系统为了追求极致的效率，往往把寄存器的大小设置为一个指针也即4B。


