#include <sys/mman.h>
void* mmap(void* addr, size_t length, int prot, int flags, int fd, off_t offset);
返回值：第一个参数
参数：
	addr：映射内存的起始地址，这个一般设置为NULL，由操作系统自行分配映射区，目前我还不知道这个区域一般会分配在哪，根据GPT的说法，不在堆也不在栈，我得感觉是它应该在堆区。
	length：映射区域的大小，由程序员自行规定，但是要注意：这个大小尽量是页大小的整数倍，页大小可以使用getconf PAGE_SIZE获取，一般是4K即4096，为什么要这么做，因为假设你传入了4097B，
	             操作系统依旧会为你分配两页即8K的映射区域。
	prot：对映射区域的访问权限。prot 参数的取值可以是以下之一或其组合：
		PROT_EXEC：可执行。
		PROT_READ：可读。
		PROT_WRITE：可写。
		PROT_NONE：不可访问。
		其中，PROT_EXEC 和PROT_WRITE 是互斥的，即同一个映射区域不能同时设置为可读写和可执行。关于这一点，GPT做出了如下解释：
			这是因为 CPU 在执行代码的时候，需要将代码从内存中取出，并将其放入 CPU 中执行。当代码被执行的时候，指令流是不可修改的。
			因此，为了保证程序的正确性和安全性，操作系统将可执行代码的内存区域标记为只读和可执行，以避免因为误操作导致指令流被修改而引起程序执行异常或安全问题。
		关于prot参数有一点是非常重要的：prot参数必须要和被映射的存储区的mode保持一致。
	flags：
		MAP_SHARED：多个进程可以共享这个被映射的文件或内存。该选项是默认选项，即如果没有设置MAP_SHARED，也没有设置MAP_PRIVATE，默认为MAP_SHARED。
		MAP_PRIVATE：被映射的文件或内存映射是私有的。
		MAP_FIXED：允许将映射区域映射到特定的地址，而不是由系统自动选择地址。映射区域的起始地址应该是内存分页大小的倍数。如果指定了这个标志，那么必须确保指定的地址没有被占用，否则会导致映射失败。
		MAP_ANONYMOUS：
			将一片匿名内存映射到进程地址空间。
			该选项就是我们在原理分析中介绍到的第一种方法里的匿名映射方法了。
		MAP_NORESERVE：不“预留”使用映射区域的物理 RAM，这个标志只用于匿名内存映射。优先使用交换分区（swap）和内存压缩来满足映射区域的内存要求，如果空间不足，进程会被严重的影响（例如，进程崩溃或OOM）。

	fd：
		如果设置了MAP_ANONYMOUS，fd只能设置为-1了；如果不设置MAP_ANONYMOUS，那么fd必须是某个”文件“的fd，这个文件可以是第二种方法里的磁盘上的文件，也可以是其它内存，
		实际上我们可以直接使用malloc去堆上申请一片内存作为被映射的内存，但是malloc并不返回fd，使用malloc，fd还得设置为-1，所以使用malloc做映射相当于私有映射，我们已经有MAP_ANONYMOUS了，因而这种方法是没有必要的。
		POSIX专门为我们提供了一种可以返回fd的申请共享内存的方法（非匿名映射）：
		int shm_open(const char *name, int oflag, mode_t mode);   // 该函数可用于申请一片内存，和malloc本质上差不多，区别在于shm_open申请的内存成”文件“了
		返回值：成fd败-1
		参数：
			name：必须唯一
			oflag：
				O_CREAT：如果要创建一个新的共享内存对象，则必须指定此标志，否则将忽略 mode 参数。
				O_RDWR：以读写方式打开共享内存对象。
				O_RDONLY：以只读方式打开共享内存对。
				O_TRUNC：如果已经存在同名的共享内存对象，则截断其大小为零。
				O_EXCL：用于与 O_CREAT 标志组合使用，如果要创建一个新的共享内存对象，但已经存在同名的对象，则函数调用失败。
				O_WRONLY 标志是用于打开只写文件的标志，不适用于 shm_open() 函数，因为共享内存不是文件而是内存区域，并不需要以只写模式打开内存区域。在 shm_open() 函数中，我们可以使用 O_RDWR 标志来同时打开读写模式的共享内存对象。
			mode：在O_CREAT时才会生效，和chmod()一样。
		int shm_unlink(const char* name);
		返回值：成0败-1
		参数：
			name：对应于shm_open的name
	offset：该参数针对映射文件而言，一般设置为0，意即从文件的开始位置进行映射，和length一样，尽量设置为页大小的整数倍。
