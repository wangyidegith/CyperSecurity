1 定义：程序在CPU和内存上运行起来就是进程

2 本质：最小的资源分配单位。

3 和线程的区别：进程是完全独立即计算和内存都独立，线程仅在计算上独立，也就是说：线程在内存上除了TCB（除了fd）和信号以外都是共享的，因而线程间的通信是自然而然的，线程着重要处理的是同步问题，进程在内存上也是独立的，包括fd也不是共享的，进程着重要处理的是进程间通信问题。

4 关于进程关于进程间通信的一个最重要的问题：fd到底是不是共享的？
（0）线程的fd是共享的，我们已经写过多线程对一个fd做io操作的程序，你要解决的是同步问题而不是通信问题。
（1）进程的fd不是共享的，即你在进程1里打开一个文件，拿到一个fd == 3，对于进程2，这个fd == 3是不可用的，亦或者你可能在进程2里也打开了一个fd == 3，虽然都是3，但是这是不同的文件。
（2）那问题来了？进程间通信可以让fd共享吗？——不能！！！

5 进程控制块（PCB）：一个程序开始运行的时候，OS会在内核中为该进程设置一个PCB，由PCB负责管理该进程的诸多事宜
进程标识符（PID）：唯一标识每个进程
程序计数器（PC）：指向当前进程正在执行的指令的地址
文件描述符表：记录进程已打开的文件和其属性   // 这个表是独立的，这就是为什么进程不共享fd
寄存器信息：保存 CPU 中的寄存器和其他相关寄存器的值。
进程状态（重要知识点）：记录进程的状态。进程有哪些状态？状态之间的关系是什么？——详看《进程状态》
进程优先级：确定进程在运行队列中的优先级
环境和上下文信息：存储进程运行时的环境和上下文信息
内存分配情况：记录进程已分配的内存及使用情况
系统资源使用情况：记录进程所占用的各种系统资源（如 CPU 时间、I/O 设备、内存等）的使用情况
指向父子进程的指针
