1 c11新标准

2 #include <stdatomic.h>

3 函数
（1）原子加法：int atomic_fetch_add(atomic_int *obj, int arg);
实例：
`
#include <stdio.h>
#include <stdatomic.h>
#include <threads.h>
atomic_int counter = 0;
void increment() {
    for (int i = 0; i < 1000; i++) {
        atomic_fetch_add(&counter, 1);
    }
}
int main() {
    thrd_t thread1, thread2;
    thrd_create(&thread1, (thrd_start_t)increment, NULL);
    thrd_create(&thread2, (thrd_start_t)increment, NULL);
    thrd_join(thread1, NULL);
    thrd_join(thread2, NULL);
    printf("Counter: %d\n", counter); // 应该是 2000
    return 0;
}
`
（2）原子存储：void atomic_store(atomic_int *obj, int desired);
实例：
`
#include <stdio.h>
#include <stdatomic.h>
#include <threads.h>
atomic_int flag = 0;
void set_flag() {
    atomic_store(&flag, 1); // 设置标志位为 1
}
int main() {
    thrd_t thread;
    thrd_create(&thread, (thrd_start_t)set_flag, NULL);
    thrd_join(thread, NULL);
    printf("Flag: %d\n", atomic_load(&flag)); // 应该是 1
    return 0;
}
`
（3）原子读取：int atomic_load(const atomic_int *obj);

4 适用场景：单个整型的原子操作。
