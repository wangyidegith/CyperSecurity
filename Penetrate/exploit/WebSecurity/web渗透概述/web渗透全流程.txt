在web安全里，我们不强调后渗透（仅在本概述文档中说一些关于域渗透的基本问题以全流程的“全”），如需学习后渗透，请移步post-exploit。







零 怎么挖洞
1 手动：最终还是要手动
2 fuzz（半手动）
3 自动






一 fuzz
1 fuzz概念：web挖洞的最核心技术，常见漏洞是基础。
70%
模糊测试（猜）
需要bp和字典（二者的结合实现了自动化测试，大大方便了黑客）。

2 未知目录和文件（如果后端一不小心把敏感信息放到了我们可以访问（所谓的访问就是下载）到的目录下，那么就会造成信息泄露）
（1）原理：
一个网站它至少要开放一个目录存放index文件，而这个目录用户可以随意下载，如果还有其他的目录那就更好了.
下载是随意的，上传一般不允许（上传一般要找任意文件上传漏洞，防御方法是可以规定用户必须上传什么类型的文件和使用WAF扫描文件）。
（2）fuzz在什么时候用？扫不出来目录的时候（御剑比较low，不建议用，但是能扫目录）或者没用明显漏洞的时候。
（3）逐级fuzz。

3 未知参数（甚至用户密码，还有什么隐藏变量再说）
感悟：
（1）请求一般还真不带多少东西（要不就是请求静态资源（相当于下载），要不就是请求php文件（这种后面往往会带参数），要不就是请求某个路径比如/upload-file（一般也会带参数，所以扫描参数也是一个方向，不带参数如果带的是body，那也可以通过bp修改body），这种实际上也是去请求php文件（会在try_files里做重定向）），文件上传还是个特殊情况呢。
（2）是响应才会带很多东西，但是作为攻击者，我们一般是不关注响应的。

4 各种漏洞比如SQL、XSS、CSRF等也都可以用fuzz。







二 信息打点工具
1 搜索引擎：Fofa（Fingerprint of All） Hunter Zoomeye
钟馗之眼：https://www.zoomeye.org/
Hunter：https://hunter.qianxin.com/
FOFA：https://fofa.so/

2 常用工具：
Subfinder：被动收集域名
Oneforall：枚举及API
Ehole：指纹识别
Fscan：扫描端口
Eeyes：收集网段
httpx：快速筛选资产
注：Eeyes + Fscan是比nmap更快的方式但是不够全。







三 漏洞挖掘
（一）主要漏洞：
1 第三方组件漏洞（框架漏洞比如著名的CVE-2022-22947（spring云网关漏洞）、中间件漏洞）：在漏洞挖掘中应该首先探测此类漏洞，一旦确定某些中间件、框架使用的版本有漏洞（可以在seebug.org上查），那么则可直接使用。

2 OWASP 十大漏洞（这个每年都不一样），总的来看有以下类型：
文件上传
CSRF、SSRF
SQL注入
XSS
命令注入（远程命令执行RCE，这是最严重的漏洞）
未授权访问（包括认证漏洞和访问控制失效（用户在没有登录的情况下访问了应该登录才能访问的页面），最近几年访问控制失效很严重）
配置错误
信息泄露（这是最简单的漏洞）
业务逻辑（序列化问题）
文件包含
以上就是著名的”十大web漏洞“。
最近几年还有加密失败、日志不记录攻击等。

3 弱口令：在合法的渗透测试中，这个不算漏洞，这个属于客户端个人问题。

4 未知分类：XXE



（二）目前学习顺序：
老三样：
SQL注入：
https://www.bilibili.com/video/BV1vJ4m1H7gU/?spm_id_from=333.999.0.0&vd_source=614e71a27354c32bb64f01a439f3391b
https://www.bilibili.com/video/BV1Nz421Y7Ep/?spm_id_from=333.999.0.0&vd_source=614e71a27354c32bb64f01a439f3391b
https://www.bilibili.com/video/BV16s421M7Vr/?spm_id_from=333.999.0.0&vd_source=614e71a27354c32bb64f01a439f3391b
https://www.bilibili.com/video/BV1yZ421H7oV/?spm_id_from=333.999.0.0&vd_source=614e71a27354c32bb64f01a439f3391b
XSS：
https://www.bilibili.com/video/BV1GJ4m1T7pu/?spm_id_from=333.999.0.0&vd_source=614e71a27354c32bb64f01a439f3391b
csrf：

基础（理解了这个就理解了web安全的基础）：
文件上传：
服务解析（文件包含和配置漏洞）：
文件包含：
配置漏洞：

危害最大的：
RCE：

目前主要多的：
越权：
逻辑漏洞：

XXE：

前提：
信息收集：

工具：
bp：
暴力破解：不算洞，但fuzz和这个道理一样







四 一个最基本的实战
（一）环境认识：web服务器谁都能访问且具备双网卡，内网是域有域控和域内主机。



（二）信息打点：
1 端口

2 目录



（三）漏洞探测：
1 用御剑扫，扫出来三个页面：info、admin、探针。

2 admin可能存在弱口令漏洞。



（四）exploit（核心为PoC）：
1 暴力破解admin（这一步是PoC）。
-------
注：在挖企业src的过程中，到这就行了，没必要去控制目标机。
-------
2 修改mysql日志。
3 在日志里写入一句话木马。
4 使用antsword去连。
（五）内网渗透
0 使用3389远控目标机
（1）开。
（2）关防火墙。
（3）使用猕猴桃获取密码。
1 域渗透：
注：这些命令在任何一台域内主机上都可以执行（既然都是一个域了，就信任）。
（1）通过systeminfo看是域还是工作组？显示为域名为域，显示为WORKGROUP为工作组。
（2）通过net user /domain看该域管理的所有账户（看到的当然是域账户名）。
（3）通过net group "domain computers" /domain看该域管理的所有主机（看到的是主机名，你可以通过ping这些主机名查看其IP地址）。
（4）通过whoami看一台域内主机的当前登陆账户名。有域账户和本地账户两种账户。如何区分？
本地账户的形式是：本地主机名（hostname）/本地账户名
域账户的形式是：域名/域账户名
（5）通过nslookup -type=SRV _ldap._tcp看域控是谁。（全域名的第一个字段是主机名？？）

2 改用CS进行渗透，利用antsword上传CS生成的木马到“能上传文件的目录”（这一点很关键，当然你既然可以把一句话马放上去那么放这个马也是没有问题的）。

3 横移：方法很多，现在通过ipc进行横移。
（1）首先使用猕猴桃等工具dump域管理员的账号密码。
（2）建立ipc：net use \\目标主机\IPC$ /user:用户名 密码
（3）与ipc有关的操作是（其实这三个操作不就是我们渗透测试的初级目标吗？一台机器能上传能执行就等于这台机器被初步攻克了）：上传、下载、执行：
上传：copy 本地文件路径 \\目标主机\共享文件夹路径
下载：copy \\目标主机\共享文件夹路径\文件名 本地文件路径
执行（通过创建并启用一个系统服务来执行exe）：sc create <新服务名> binPath= "<可执行文件路径>" start= <启动类型>

4 建立隧道（其目的是让内网主机也能出网，以下是通过CS建立了一条多级代理）：
注：以下操作全在跳板机上操作。
（1）使用CS生成一个SMB木马。
（2）利用ipc将其copy到目标机上并使用sc创建并执行（这个木马是一个bind型而非reverse型）。
（3）使用CS去“link <目标主机名>”。

5 使用netsh为其他服务（比如3389）建立隧道
注：在跳板机上执行。
建立一条TCP端口转发：netsh interface portproxy add v4tov4 listenaddress=<本地IP地址> listenport=<本地监听端口> connectport=<远程端口> connectaddress=<远程IP地址>
