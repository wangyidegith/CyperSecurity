0 KDC是一个密钥分发的问题，密钥管理是除了老三样的密码学核心问题之一。
（1）密钥管理包括密钥的产生、分配、注入、验证、使用。
（2）分配是最核心的问题。
（3）为什么需要密钥管理？这个问题涉及一个计算机的根本问题（是的，这是任何人学习计算机的第一课）：计算机上所有的软件或者说数据本质上都是二进制，数字本来就是，字符通过字符集和编码被转换为二进制（ASCII、UTF-8等），当然也有URL编码、base64编码等经典的转ASCII码的编码，注意，我们谈到了一个词叫编码，是的，一切东西都需要编码，编码的过程就是加密的过程，同理，解码即解密的过程，但是加解密要比编解码多了一个东西，那就是密钥，如果没有密钥，那么加解密就是编解码了。
（4）密钥管理的重要性：根本性重要。密钥被黑客截获意味着对黑客而言加解密将不再是加解密而是计算机技术本就使用的编解码。
（5）密钥能被截获吗？（换言之，密钥的传输安全能保证吗？）
首先密钥不可能不在网络上传输，除非军方网络可能会使用人工，因而兹要它在网络上传输那么就存在被截获的可能性。
其次公钥体制下，截获公钥没啥用，而私钥根本就不传输，因而公钥体制有效避免了密钥被截获的问题。
最后对称密钥是可能被截获的，这一点是内网横移的根本思想。
另外，有人说，要不再给密钥加密？可是终究要有明文密钥的存在。
（6）KDC的工作原理：
假设A要和B通信，前提是A和B都已经在KDC上注册过了即KDC保有了A和B的主密钥（master key，KA和KB）。
第一步：A向KDC发起请求说明希望和B通信。
第二步：KDC产生一个随机的会话密钥KAB，响应一个使用KA加密的[KAB，请A转给B的票据（ticket）]给A，其中，ticket是使用KB加密的[KAB]
第三步：A拿到[KAB，请A转给B的票据（ticket）]后，解密得到ticket，发送给B。
第四步：B拿到ticket后，解密拿到KAB，自此，A和B就可以愉快地通信了。

1 对称密钥的分配：kerberos协议
（1）用途：内网渗透中著名的域协议的核心协议之一（域协议准确的说是keberos和SMB、NFS等文件共享协议的结合，SMB负责文件共享（该协议将在），Kerberos负责认证）。
（2）为什么在内网中得到了广泛应用？对称密钥的分配很容易被截获，所以这个协议在公网根本活不下去，但是在内网由于其高效被广泛使用，当然这也为内网渗透提供了土壤。
（3）原理：
a 设备：一台AS（Authentication Server，掌握各个实体的身份和口令（用来生成各个实体的主密钥））和一台TGS（Ticket-Granting Server）。
b 前提：假设A要和B通信，前提是A和B都已经在AS和TGS上注册过了即AS和TGS保有了A和B的主密钥（master key，KA和KB）。
c 步骤：
第一步：A向AS发起身份认证请求，认证成功AS允许A和TGS通信。
第二步：AS向A发送用KA加密的[A和TGS通信的会话密钥KS，AS要发给TGS的ticket]，其中，ticket是使用KTG加密的。
第三步：A使用KA取出KA加密的[A和TGS通信的会话密钥KS，AS要发给TGS的ticket]，向TGS发送[AS要发给TGS的ticket]，当然还有其他的信息，比如为了预防重放的时间戳。
第四步：TGS向A发送使用KS加密的[KAB]，向B发送使用KB加密的[KAB]。
注：这里为什么不使用KA加密而使用KS，我也不知道，我觉得也能用KA。
第五步：A使用KAB加密一个时间戳发给B，B把时间戳加一并使用KAB加密发给A，接下来愉快通信。
