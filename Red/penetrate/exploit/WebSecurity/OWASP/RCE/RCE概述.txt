零 多命令操作技巧（远程命令执行）
（一）Linux
1 ;
command1 ; command2
无关成功与否，都执行。

2 &
command1 & command2
无关成功与否，都执行。

3 逻辑与运算符 &&
command1 && command2
第一个成功，继续执行第二个，第一个不成功，不执行第二个。

4 管道运算符 |
1 用于将一个命令的标准输出传递给另一个命令的标准输入，实现两个命令之间的数据流通。其实这里才算管道运算符。
2 如果两个命令间没关系，那么只执行第二个。
示例：command1 | command2

5 逻辑或运算符 ||
command1 || command2
第一个成功，不执行第二个，第一个不成功，执行第二个；

6 ``
Linux会优先执行反引号里的命令，比如：
ls `echo "/etc"`
上述命令==ls /etc







二 漏洞成因（原理）
（一）远程命令执行：命令执行功能没有检查用户输入的命令而直接进行拼接。
每种语言都有执行命令的函数，浏览器送来的命令会被拼接成这些函数的参数去执行，但如果从浏览器拿来的命令没有被检查过滤而直接送入这些函数将会出事。



（二）远程代码执行
PHP的eval和Java的exec函数都可以执行代码，浏览器送来的代码会被拼接成这些函数得参数去执行，但如果检查过滤不严就会出事。
注意：这两种RCE得区别就在于利用方式：远程命令执行一般通过多命令操作进行利用，而远程代码执行一般通过可以执行命令的函数（就是上面介绍的）进行利用。







三 测试思路
（一）明确注入点：总之就是一切前端功能表现为会让后端执行一个命令或者代码的点。路由器等设备的管理页面，自动化运维系统的管理页面尤其容易出现命令执行漏洞。
（二）设计poc并测试。
得先知道系统。
1 远程命令执行：多命令操作。
2 远程代码执行：
（1）PHP：
exec
shell_exec
system
passthru
proc_open
（2）Java：Runtime.getRuntime().exec("code");




四 防护方法：做好检测。
