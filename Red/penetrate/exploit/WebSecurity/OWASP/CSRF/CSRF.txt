一 原理
1 点击（one click）攻击或”沉睡的巨人“。
2 攻击流程：你得构造一条链接或者钓鱼网站，欺骗受害者点击，然后攻击完成（前提是已经有了cookie）。
3 与XSS的区别：XSS可以让黑客获得cookie，但是CSRF不能让攻击者获得cookie而是利用受害者的cookie。
4 因而CSRF攻击其实很简单，但是关键在于两点：
（1）用户已经登录；
（2）你得让用户去点。
5 再复杂一点的CSRF攻击：
你可以搭一个恶意网站，欺骗客户点击URL链接以访问该网站，然后响应一条到受害者浏览器，利用浏览器的重定向发送伪造请求。
6 总结来看，CSRF有两种攻击方式：
（1）简单攻击（GET）：直接让用户点构造好的URL，触发攻击请求；
（2）复杂攻击（POST）：让用户先点去恶意站点的URL然后由站点响应给用户继而触发攻击请求。



二 实例
（一）下面是一个来自皮卡丘的CSRF攻击实例，可用于删除用户：
删除之前：http://192.168.43.223/pikachu/vul/overpermission/op2/op2_admin.php
删除之后：http://192.168.43.223/pikachu/vul/overpermission/op2/op2_admin.php?id=26
以上情况表明可以进行CSRF攻击，但是你需要猜id（可以根据自己的情况猜）。
（二）
discuz有一个CSRF漏洞，它允许用户链接图片，其后端会根据存储在数据库中的用户图片URL展示图片，但是后端对用户输入的URL链接并没有做任何过滤而是天真以为用户真的会乖乖输入图片链接，因而黑客可以利用这一点注入一些攻击代码比如注入拖库URL（这个URL是根据代码分析得出的），这样等后台管理员（肯定是后台管理员因为他有拖库权限）访问会展示该“图片”的页面时实现拖库。
（三）
对于简单和复杂攻击，winrar是个相当好的选择，可以”创建自压缩格式压缩文件“。



三 测试思路
（一）测试点：
1 GET：一条URL可以完成一些事情比如增删查改而没有检查referer。
2 POST：某些操作可以完成一些事情而没有检查referer。
（二）利用：
1 GET：直接构造URL骗用户点就行了。
2 POST：设置一个钓鱼网站，骗用户访问，用户访问了以后响应给用户构造好的页面触发请求页面。



四 防御
1 使用 CSRF Token：在请求中加入一个唯一的 CSRF Token，并验证其有效性。这个 Token 应该是难以预测和唯一的，通常通过在表单中加入隐藏字段的方式进行。
2 检查 Referer 或 Origin 头：验证请求的来源是否合法。虽然这种方法不是绝对可靠，但可以增加防护。
3 使用 SameSite 属性：为 cookies 设置 SameSite 属性，以防止它们被不相关的第三方网站使用。SameSite=Lax 或 SameSite=Strict 可以有效减小 CSRF 攻击的风险。
4 用户验证：在敏感操作（如资金转账）时，要求用户进行额外的验证（如输入密码或验证码）。
5 避免 GET 请求进行敏感操作：将敏感操作（如修改账户信息、转账）限制为 POST 请求，并确保这些 POST 请求带有有效的 CSRF Token。


