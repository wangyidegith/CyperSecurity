一 定义：编码是计算机领域中的数据表示问题。



二 和加密的区别。



三 用处：一般可见于语言（编程），web页面。



四 理解
编码整个就分为二进制编码（任何数字都以二进制形式表示）和字符编码（将字符编码位数字）：
1 其实计算机的一切软件（代码、数据）归根到底也不管在哪（最后在CPU上运行在存储上表示在网络上传输）都是二进制数，都是要经过二进制编码的.
2 但是数据对用户而言（C语言层面）又分为数字类型（注：布尔也是数字）和字符类型，数字类型直接进行二进制编码即可（或者说数字本来就是二进制），字符类型则需要由字符集将其编码数字。



五 常见字符编码
0 shellcode编码：就是十六进制编码

1 ASCII编码：
最基本的字符编码。
字符集所有字母、阿拉伯数字、你在键盘上能看到的种种字符等。

2 Base64：
（1）作用：将任何信息转为ASCII码。
（2）编码方法：Base64 编码将每 3 个字节的数据转换为 4 个 ASCII 字符。
（3）字符集：Base64 使用 64 个可打印字符，包括字母（A-Z, a-z）、数字（0-9）和两个额外字符（通常是 + 和 /，注意：=是填充字符不属于字符集）。
（4）应用场景：邮件传输，web传输（尤其表示图像等信息，放到JSON活XML中），web身份验证，表示SSL的密钥证书等信息，等。

3 URL编码（又名%编码）（为了转义）
（1）作用：转义URL的字符以避免被错误解析。
（2）编码方法：%该字符的十六进制
（3）
a URL中哪些字符不需要编码？
字母（A-Z, a-z）
数字（0-9）
一些特殊字符（如-、.、_、~）
b 哪些字符作为自定义字符需要一定需要编码？（换言之，哪些字符是保留字符？）
原字符	URL 编码
空格	%20
!	%21
#	%23
$	%24
&	%26
'	%27
(	%28
)	%29
*	%2A
+	%2B
,	%2C
/	%2F
:	%3A
;	%3B
=	%3D
?	%3F
@	%40
[	%5B
]	%5D

4 Unicode编码：UTF-8是目前的最常用且最标准（体现在什么语言都能编）字符集和编码方法。

5 HTML实体编码（为了转义）
（1）作用：转义HTML的字符以避免被错误解析。
（2）编码方法：由一个 & 符号开始，后跟一个字符实体名称或数字编码，最后以 ; 结束。
（3）常见字符：
字符	实体名称	数字编码
&	&amp;	&#38;
<	&lt;	&#60;
>	&gt;	&#62;
"	&quot;	&#34;
'	&apos;	&#39;
空格	&nbsp;	&#160;
©	&copy;	&#169;
®	&reg;	&#174;
™	&trade;	&#8482;



六 字节和字符的概念
（零）相同：习惯上人们以十六进制表示字节。
（一）字节：
1 是更宽泛的概念。
2 表示：
（1）C语言：unsinged char（其实也能用char）
（2）python：b"" or ''
（二）字符：
1 仅针对字符类型。
2 表示：
（1）C语言：char
（2）python："" or ''



七 转义字符（反斜杠 + 某些字符）
1 切入点：虽然说人们一般用十六进制表示字节，但是这也不一定，那么34和十六进制34如何区分，因而转义字符就诞生了。
2 常见转义序列
（1）换行和制表符：
\n：换行符
\t：制表符（Tab）
（2）特殊字符：
\'：单引号
\"：双引号
\\：反斜杠
（3）Unicode 和十六进制：
\uXXXX：表示 Unicode 字符，其中 XXXX 是四位十六进制数。
\xXX：表示一个字节，其中 XX 是两位十六进制数。
\XXX：表示一个字节，其中 XX 是八进制数。
注：在数字表示里，使用 0x 或 0X 来表示十六进制数，使用 0 表示八进制数。